{
  "input": {
    "alg": "hc",
    "bookmark": 0,
    "dataInput": "1",
    "dendrogram": "both",
    "editorIntro": 0,
    "eval": 0,
    "event": "C",
    "evidence": "a",
    "evidenceNode": "B",
    "file": null,
    "homeIntro": 0,
    "inferenceIntro": 0,
    "iss": 10,
    "measuresIntro": 0,
    "met": "bayes",
    "net": "1",
    "Node": "B",
    "nodeMeasure": "mb",
    "nodeNames": "A",
    "param": "dotplot",
    "parametersIntro": 0,
    "rmd": "## Sample Code\nHere is some sample markdown to help illustrate the editor.\n\n### Get some sample data and show the first few values\n### Use `dat()` to get the active data set\n```{r}\ndat <- learning.test\nhead(dat)\n```\n\n### Learn the structure of the network\n```{r}\ndag <- bnlearn::cextend(bnlearn::gs(dat))\n```\n\n### Plot the force directed network\n```{r}\nnetworkData <- data.frame(bnlearn::arcs(dag))\n\nnetworkD3::simpleNetwork(\n  networkData,\n  Source = \"from\",\n  Target = \"to\"\n)\n```\n\n### Print the network score\n```{r}\nbnlearn::score(dag, dat)\n```\n\n### Fit the model parameters and show the CPT for node A\n```{r}\nfit <- bnlearn::bn.fit(dag, dat)\nfit$A\n```\n\n### Plot the model parameters for node A\n```{r}\nbnlearn::bn.fit.barchart(fit[[\"A\"]])\n```\n\n### Get the Markov blanket for node A\n```{r}\nbnlearn::mb(dag, \"A\")\n```\n\n### Plot a d3 heatmap of the adjacency matrix\n```{r}\nheatmaply::heatmaply(\n  bnlearn::amat(dag),\n  grid_gap = 1,\n  colors = blues9,\n  dendrogram = \"both\",\n  symm = TRUE,\n  margins = c(100, 100, NA, 0),\n  hide_colorbar = TRUE\n)\n````\n\n### Generate some random data from the network and show the first few values\n```{r}\nset.seed(1)\nsimData <- bnlearn::rbn(fit, n = 100, dat)\nhead(simData)\n```\n\n```{r}\n# Put your own code here...\n",
    "sidebarCollapsed": false,
    "sidebarItemExpanded": null,
    "sidebarMenu": "measures",
    "structureIntro": 0,
    "type": "aic"
  },
  "output": {
    "arcsBox": {
      "html": "<div class=\"col-sm-4\">\n  <div class=\"small-box bg-green\">\n    <div class=\"inner\">\n      <h3>5<\/h3>\n      <p>Arcs<\/p>\n    <\/div>\n    <div class=\"icon-large\">\n      <i class=\"fa fa-arrow-right\"><\/i>\n    <\/div>\n  <\/div>\n<\/div>",
      "deps": [
        {
          "name": "font-awesome",
          "version": "4.7.0",
          "src": {
            "href": "shared/font-awesome"
          },
          "meta": null,
          "script": null,
          "stylesheet": "css/font-awesome.min.css",
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "condPlot": {
      "src": "[image data sha1: 5403a00b234137d6e112d1e70d43e2cb6e67a22a]",
      "width": 458,
      "height": 400,
      "coordmap": [
        {
          "domain": {
            "left": -0.04,
            "right": 1.04,
            "bottom": -0.04,
            "top": 1.04
          },
          "range": {
            "left": 0,
            "right": 458,
            "bottom": 399,
            "top": -1
          },
          "log": {
            "x": null,
            "y": null
          },
          "mapping": {

          }
        }
      ]
    },
    "distPlot": {
      "src": "[image data sha1: c13deab298964d6bc4f6c3946f6204ad88d17dd2]",
      "width": 458,
      "height": 400,
      "coordmap": [
        {
          "domain": {
            "left": 0.064,
            "right": 3.736,
            "bottom": 0,
            "top": 1
          },
          "range": {
            "left": 59.04,
            "right": 427.76,
            "bottom": 325.56,
            "top": 58.04
          },
          "log": {
            "x": null,
            "y": null
          },
          "mapping": {

          }
        }
      ]
    },
    "netPlot": {
      "x": {
        "links": {
          "source": [
            0,
            0,
            1,
            2,
            5
          ],
          "target": [
            1,
            3,
            4,
            3,
            4
          ],
          "value": [
            1,
            1,
            1,
            1,
            1
          ],
          "colour": [
            "#666",
            "#666",
            "#666",
            "#666",
            "#666"
          ]
        },
        "nodes": {
          "name": [
            "A",
            "B",
            "C",
            "D",
            "E",
            "F"
          ],
          "group": [
            1,
            1,
            1,
            1,
            1,
            1
          ],
          "nodesize": [
            8,
            8,
            8,
            8,
            8,
            8
          ]
        },
        "options": {
          "NodeID": "name",
          "Group": "group",
          "colourScale": "d3.scaleOrdinal(['#3182bd'])",
          "fontSize": 7,
          "fontFamily": "serif",
          "clickTextSize": 17.5,
          "linkDistance": 50,
          "linkWidth": "'1.5px'.toString()",
          "charge": -30,
          "opacity": 0.75,
          "zoom": true,
          "legend": false,
          "arrows": false,
          "nodesize": true,
          "radiusCalculation": "d.nodesize",
          "bounded": false,
          "opacityNoHover": 1,
          "clickAction": null
        }
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [

      ]
    },
    "nodesBox": {
      "html": "<div class=\"col-sm-4\">\n  <div class=\"small-box bg-blue\">\n    <div class=\"inner\">\n      <h3>6<\/h3>\n      <p>Nodes<\/p>\n    <\/div>\n    <div class=\"icon-large\">\n      <i class=\"fa fa-circle\"><\/i>\n    <\/div>\n  <\/div>\n<\/div>",
      "deps": [
        {
          "name": "font-awesome",
          "version": "4.7.0",
          "src": {
            "href": "shared/font-awesome"
          },
          "meta": null,
          "script": null,
          "stylesheet": "css/font-awesome.min.css",
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "nodeText": "B C D",
    "score": "-23873.13"
  },
  "export": {

  }
}
